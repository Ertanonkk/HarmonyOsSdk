const content=require("./content"),data=require("./data"),{DEVICE_LEVEL:DEVICE_LEVEL}=require("../lite/lite-enum"),card=process.env.DEVICE_LEVEL===DEVICE_LEVEL.CARD,REG_CARD_ARRAY=/(\['.+?'\])|(\[".+?"\])/g;function transExp(t,r){let e=t.toString().trim();return isExp(e)&&(e=parseExp(e,r)),e}function parseExp(value,functionFlag){const textArray=data.parseText(value),explist=[];for(let t=0;t<textArray.length;t++){const r=textArray[t];let e;r.tag?(e=card?`{{${transCardArray(r.value)}}}`:content.parseExpression(r.value),1===textArray.length||card||(e=`(${e})`)):e=card?r.value:`decodeURI('${encodeURI(r.value).replace(/\'/g,"%27")}')`,explist.push(e)}let func=explist.join(card?"":" + ");return!1===functionFlag||card||(func=eval("(function () {return "+func+"})")),func=card&&textArray.length>1?"$f("+func+")":func,func}function transExpForList(t){let r=t.toString().trim();return containExp(r)&&(r=parseExpList(r)),r}function parseExpList(t){const r=t.match(/{{{([\s\S]+?)}}}|{{([\s\S]+?)}}/g);let e=0;const n=[];return t.replace(/{{{([\s\S]+?)}}}|{{([\s\S]+?)}}/g,"&e").split(/\s+/).forEach(t=>{if(t.indexOf("&e")>=0){for(;t.indexOf("&e")>=0;)t=t.replace("&e",r[e++]);const a=data.parseText(t),s=[];a&&(a.forEach(function(t){const r=t.tag?card?`{{${t.value}}}`:content.parseExpression(t.value):card?t.value:`'${t.value}'`;s.push(r)}),n.push(s.join("+")))}else{const r=card?t:`'${t}'`;n.push(r)}}),card?n:"(function () {return ["+n.join(", ")+"]})"}function isExp(t){return/{{{([\s\S]+?)}}}|{{([\s\S]+?)}}/.test(t)}function containExp(t){return/{{{([\s\S]+?)}}}|{{([\s\S]+?)}}/g.test(t)}function removeAllExpFix(t){return containExp(t)?t.replace(/\{\{\{?|\}\}\}?/g,""):t}function transCardArray(t){return"."===(t=t.replace(REG_CARD_ARRAY,t=>`.${t.slice(2,-2)}.`)).charAt(t.length-1)&&(t=t.slice(0,-1)),t}transExp.isExp=isExp,transExp.containExp=containExp,transExp.removeAllExpFix=removeAllExpFix,transExp.transExpForList=transExpForList,transExp.transCardArray=transCardArray,module.exports=transExp;