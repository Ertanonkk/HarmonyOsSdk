"use strict";var _util=require("./util");function _typeof(e){"@babel/helpers - typeof";return(_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}var path=require("path"),cardJsonPlugin=require("./cardJson-plugin"),transCardArray=require("./templater/bind").transCardArray,ResourceReferenceParsing=require("./resource-reference-script"),REG_EVENT_STRING=/("\s*\$event\..+")|('\s*\$event\..+')/g,REG_EVENT=/\$event\.[\w]+/g,REG_THIS=/this\..*/g;function parseCard(_this,source){source=source.replace(/\/\*((\n|\r|.)*?)\*\//gm,""),source=source.replace(/(\s|\;|^|\{|\})\/\/.*$/gm,"$1"),0===source.trim().indexOf("export default")&&(source=source.replace("export default",""));var extName=path.extname(_this.resourcePath);".json"!==extName&&".js"!==extName||(source=ResourceReferenceParsing(source),source=source.replace(REG_EVENT_STRING,function(e){return e.slice(1,-1)}),source=source.replace(REG_EVENT,function(e){return'"'+e+'"'}),source=source.replace(REG_THIS,function(e){return'"'!==e.charAt(e.length-1)&&"'"!==e.charAt(e.length-1)&&'",'!==e.slice(-2)&&"',"!==e.slice(-2)&&(e=","===e.charAt(e.length-1)?'"{{'.concat(transCardArray(e.slice(0,-1)),'}}",').replace(/this\./g,""):'"{{'.concat(transCardArray(e),'}}"').replace(/this\./g,"")),e})),source=JSON.stringify(eval("("+source+")"));var jsonPaths=mkJsonFiles(_this);return cardJsonPlugin.compileJson(_this._compiler,"init",jsonPaths.indexJson),jsonPaths.element?".json"===extName||".js"===extName?(cardJsonPlugin.compileJson(_this._compiler,jsonPaths.element,jsonPaths.indexJson,processActions(JSON.parse(source).actions,_this),jsonPaths.element,"actions"),cardJsonPlugin.compileJson(_this._compiler,jsonPaths.element,jsonPaths.indexJson,validateData(JSON.parse(source).data,_this),jsonPaths.element,"data"),cardJsonPlugin.compileJson(_this._compiler,jsonPaths.element,jsonPaths.indexJson,validateData(JSON.parse(source).apiVersion,_this),jsonPaths.element,"apiVersion"),cardJsonPlugin.compileJson(_this._compiler,jsonPaths.element,jsonPaths.indexJson,replacePropsArray(JSON.parse(source).props,_this),jsonPaths.element,"props")):".css"===extName||".less"===extName||".sass"===extName||".scss"===extName?cardJsonPlugin.compileJson(_this._compiler,jsonPaths.element,jsonPaths.indexJson,JSON.parse(source),jsonPaths.element,"styles"):".hml"===extName&&cardJsonPlugin.compileJson(_this._compiler,jsonPaths.element,jsonPaths.indexJson,JSON.parse(source),jsonPaths.element,"template"):".json"===extName||".js"===extName?(cardJsonPlugin.compileJson(_this._compiler,"actions",jsonPaths.indexJson,processActions(JSON.parse(source).actions,_this),"actions"),cardJsonPlugin.compileJson(_this._compiler,"data",jsonPaths.indexJson,validateData(JSON.parse(source).data,_this),"data"),cardJsonPlugin.compileJson(_this._compiler,"apiVersion",jsonPaths.indexJson,validateData(JSON.parse(source).apiVersion,_this),"apiVersion")):".css"===extName||".less"===extName||".sass"===extName||".scss"===extName?cardJsonPlugin.compileJson(_this._compiler,"styles",jsonPaths.indexJson,JSON.parse(source),"styles"):".hml"===extName&&cardJsonPlugin.compileJson(_this._compiler,"template",jsonPaths.indexJson,JSON.parse(source),"template"),source}function mkJsonFiles(e){var t,s="",o=e.resourceQuery.split("#"),r=e._compiler.options.entry,n=e.resourcePath;return Object.keys(r).forEach(function(a){path.dirname(path.resolve(r[a]))===path.dirname(n)?s=a+".json":e.resourceQuery&&path.dirname(path.resolve(r[a]))===path.dirname(o[1])&&(s=a+".json",t=o[0].slice(1))}),{indexJson:s=path.resolve(e._compiler.options.output.path,s),element:t}}function replacePropsArray(e,t){if(Array.isArray(e)){var s={};e.forEach(function(e){"string"!=typeof e&&(0,_util.logWarn)(t,[{reason:"WARNING: The props value type should be 'string', not '".concat(_typeof(e),"' in props array in custom elements.")}]),s[e]={default:""}}),e=s}else"[object Object]"===Object.prototype.toString.call(e)?Object.keys(e).forEach(function(s){"[object Object]"!==Object.prototype.toString.call(e[s])&&(0,_util.logWarn)(t,[{reason:"WARNING: The props default value type can only be Object in custom elements."}]),e[s].hasOwnProperty("default")||(e[s]={default:""})}):(0,_util.logWarn)(t,[{reason:"WARNING: The props type can only be Array or Object in custom elements."}]);return e}function processActions(e,t){return"[object Object]"===Object.prototype.toString.call(e)?Object.keys(e).forEach(function(s){e[s].method&&("string"==typeof e[s].method?e[s].method.toLowerCase()!==e[s].method&&((0,_util.logWarn)(t,[{reason:"WARNING: The key method '".concat(e[s].method,"' in the actions don't support uppercase letters.")}]),e[s].method=e[s].method.toLowerCase()):(0,_util.logWarn)(t,[{reason:"WARNING: The key method type in the actions should be 'string', not '".concat(_typeof(e[s].method),"'.")}]))}):e&&(0,_util.logWarn)(t,[{reason:"WARNING: The actions value type can only be Object."}]),e}function validateData(e,t){return e&&"[object Object]"!==Object.prototype.toString.call(e)&&(0,_util.logWarn)(t,[{reason:"WARNING: The data value type can only be Object."}]),e}module.exports=function(e){if(this.cacheable&&this.cacheable(),"card"===process.env.DEVICE_LEVEL){try{e=parseCard(this,e)}catch(e){return(0,_util.logWarn)(this,[{reason:"ERROR: Failed to parse the file : "+this.resourcePath+"\n".concat(e)}]),"{}"}return"{}"}return"module.exports = ".concat(e)};