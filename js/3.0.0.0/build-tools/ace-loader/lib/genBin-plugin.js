"use strict";var output,webpackPath,_interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault"),_newArrowCheck2=_interopRequireDefault(require("@babel/runtime/helpers/newArrowCheck")),_classCallCheck2=_interopRequireDefault(require("@babel/runtime/helpers/classCallCheck")),_createClass2=_interopRequireDefault(require("@babel/runtime/helpers/createClass")),fs=require("fs"),path=require("path"),process=require("child_process"),qjsc=path.join(__dirname,"..","bin","qjsc"),forward='(global.___mainEntry___ = function (globalObjects) {\n  const define = globalObjects.define;\n  const require = globalObjects.require;\n  const bootstrap = globalObjects.bootstrap;\n  const register = globalObjects.register;\n  const render = globalObjects.render;\n  const $app_define$ = globalObjects.$app_define$;\n  const $app_bootstrap$ = globalObjects.$app_bootstrap$;\n  const $app_require$ = globalObjects.$app_require$;\n  const history = globalObjects.history;\n  const Image = globalObjects.Image;\n  const OffscreenCanvas = globalObjects.OffscreenCanvas;\n  (function(global) {\n    "use strict";\n',last="\n})(this.__appProto__);\n})",firstFileEXT=".jtc",sencondFileEXT=".c",lastFileEXT=".bin",GenBinPlugin=function(){function e(t,s){(0,_classCallCheck2.default)(this,e),output=t,webpackPath=s}return(0,_createClass2.default)(e,[{key:"apply",value:function(e){var t=this;(fs.existsSync(path.resolve(webpackPath,"qjsc.exe"))||fs.existsSync(path.resolve(webpackPath,"qjsc")))&&e.hooks.emit.tap("GenBinPlugin",function(e){var s=this;(0,_newArrowCheck2.default)(this,t);var n=e.assets;Object.keys(n).forEach(function(e){if((0,_newArrowCheck2.default)(this,s),output&&webpackPath&&".js"===path.extname(e)){var t=n[e].source();0!==e.search("./workers/")&&(t=forward+t+last);var r=e.replace(/\.js$/,firstFileEXT);writeFileSync(t,path.resolve(output,r),e)}}.bind(this))}.bind(this))}}]),e}();function writeFileSync(e,t,s){var n=path.join(t,"..");fs.existsSync(n)&&fs.statSync(n).isDirectory()||mkDir(n),fs.writeFileSync(t,e),fs.existsSync(t)?qjscFirst(t,t.replace(/\.jtc$/,sencondFileEXT)):console.error("[31m","Failed to convert file ".concat(s," to bin. ").concat(t," is lost"),"[39m")}function mkDir(e){var t=path.join(e,"..");fs.existsSync(t)&&!fs.statSync(t).isFile()||mkDir(t),fs.mkdirSync(e)}function qjscFirst(e,t){var s='"'.concat(qjsc,'" -o "').concat(t,'" -N buf -c "').concat(e,'"');try{process.execSync(s)}catch(t){console.error("[31m","Failed to convert file ".concat(e," to bin"),"[39m")}fs.existsSync(e)?(fs.unlinkSync(e),qjscSecond(t)):console.error("[31m","Failed to convert file ".concat(e," to bin. ").concat(e," is lost"),"[39m")}function qjscSecond(e){var t=fs.readFileSync(e,"utf8");t=t.substr(t.indexOf("{")+1,t.indexOf("}")-t.indexOf("{")-1).trim();var s=e.replace(/\.c$/,lastFileEXT),n=path.join(s,"..");fs.existsSync(n)&&fs.statSync(n).isDirectory()||mkDir(n),fs.writeFileSync(s,toBuffer(t)),fs.existsSync(e)?fs.unlinkSync(e):console.error("[31m","Failed to clean file ".concat(e,"."),"[39m")}function toBuffer(e){for(var t=e.split(","),s=Buffer.alloc(t.length),n=0;n<t.length;n++)s[n]=t[n];return s}module.exports=GenBinPlugin;