export function getSymbol(node: any): any;
export function tsStringToString(str: any): string;
export function getTextOfIdentifierOrLiteral(node: any): any;
export function isJsFile(file: any): boolean;
export function createEmptyNodeArray(): never[];
export function getFlowNode(stmt: any): any;
export function bindSourceFile(sourceFile: any, options: any): void;
export function createDiagnosticForNode(node: any, message: any, ...args: any[]): any;
export function createCompilerDiagnostic(message: any, ...args: any[]): any;
export function createFileDiagnostic(file: any, start: any, length: any, message: any, ...args: any[]): any;
export function isEffectiveStrictModeSourceFile(node: any, compilerOptions: any): any;
export function getErrorSpanForNode(sourceFile: any, node: any): any;
export function getSpanOfTokenAtPosition(sourceFile: any, pos: any): any;
export function getContainingClass(node: any): any;
export function getContainingClass(node: any): any;
export function declarationNameToString(node: any): any;
export function declarationNameToString(node: any): any;
export function getContainingFunction(node: any): any;
export function isPrologueDirective(node: any): any;
export function getSourceTextOfNodeFromSourceFile(sourceFile: any, node: any, includeTrivia: any): any;
export function isAssignmentTarget(node: any): any;
export function getSourceFileOfNode(node: any): any;
export function isIterationStatement(node: any, lookInLabeledStatements: any): boolean;
export function getTextOfNode(node: any, includeTrivia: any): any;
export function nodePosToString(node: any): any;
export function getContainingFunctionDeclaration(node: any): any;
export function tokenToString(t: any): string | undefined;
export function getNewTargetContainer(node: any): any;
export function isLet(node: any): any;
export function isVarConst(node: any): any;
export function nodeCanBeDecorated(node: any): any;
export function nodeIsPresent(node: any): any;
export function getAllAccessorDeclarations(declarations: any, accessor: any): any;
export function modifierToFlag(token: any): any;
export function hasSyntacticModifier(node: any, flag: any): any;
export function isAmbientModule(node: any): any;
export function isKeyword(node: any): any;
export function getThisContainer(node: any): any;
export function getEnclosingBlockScopeContainer(node: any): any;
export function findAncestor(node: any, callback: any): any;
export function isBlockScope(node: any, parentNode: any): any;
export function isIdentifierName(node: any): any;
export function isInTopLevelContext(node: any): any;
export function isExternalOrCommonJsModule(node: any): any;
export function skipParentheses(node: any): any;
export function getImmediatelyInvokedFunctionExpression(node: any): any;
export function hasQuestionToken(node: any): any;
export function getPropertyNameForPropertyNameNode(name: any): any;
export function isFunctionBlock(node: any): any;
export function isFunctionLike(node: any): boolean;
export function getSuperContainer(node: any, stopOnFunctions: any): any;
export function getClassExtendsHeritageElement(node: any): any;
export function getClassExtendsHeritageElement(node: any): any;
export function hasStaticModifier(node: any): any;
export function skipOuterExpressions(node: any, kinds: any): any;
export function isSuperCall(node: any): any;
export function isThisIdentifier(node: any): any;
export function isThisProperty(node: any): any;
export function isSuperProperty(node: any): any;
//# sourceMappingURL=jshelpers.d.ts.map